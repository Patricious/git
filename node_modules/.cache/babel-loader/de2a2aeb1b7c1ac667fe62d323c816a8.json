{"ast":null,"code":"var _jsxFileName = \"/Users/patriciamulaudzi/Desktop/amimate-test/src/Components/Content.js\";\nimport React from \"react\";\nimport clamp from 'lodash-es/clamp'; // import { render } from \"react-dom\";\n\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useScroll } from \"react-use-gesture\";\nimport { Container } from 'react-bootstrap';\nimport Draggable from 'react-draggable';\nimport '../App.scss';\nconst podcast = [\"/baked.jpg\", \"/lesser.jpg\", \"/pod.jpg\", \"/son.jpg\"];\n\nfunction Content() {\n  const controls = useAnimation();\n  const bind = useScroll(event => {\n    controls.start({\n      transform: `perspective(500px) rotateY(${event.scrolling ? clamp(event.delta[0]) : 0}deg)`\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, Object.assign({}, bind(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }\n  }), podcast.map(src => /*#__PURE__*/React.createElement(motion.div, {\n    key: src,\n    className: \"card\",\n    style: {\n      backgroundImage: `url(${src})`\n    },\n    animate: controls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })))) //  {/* <div className=\"container\" {...bind()}>\n  // //         {podcast.map(src => (\n  // //           <motion.div\n  // //             key={src}\n  // //             className=\"card\"\n  // //             style={{\n  // //               backgroundImage: `url(${src})`\n  // //             }}\n  // //             animate={controls}\n  // //           />\n  // //         ))}\n  // //       </div> */}\n  ;\n}\n\nexport default Content;","map":{"version":3,"sources":["/Users/patriciamulaudzi/Desktop/amimate-test/src/Components/Content.js"],"names":["React","clamp","motion","useAnimation","useScroll","Container","Draggable","podcast","Content","controls","bind","event","start","transform","scrolling","delta","map","src","backgroundImage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,eAArC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,aAAP;AAGA,MAAMC,OAAO,GAAC,CACV,YADU,EAEV,aAFU,EAGV,UAHU,EAIV,UAJU,CAAd;;AAOA,SAASC,OAAT,GAAkB;AAEd,QAAMC,QAAQ,GAAGN,YAAY,EAA7B;AACA,QAAMO,IAAI,GAAGN,SAAS,CAACO,KAAK,IAAI;AAC9BF,IAAAA,QAAQ,CAACG,KAAT,CAAe;AACbC,MAAAA,SAAS,EAAG,8BACVF,KAAK,CAACG,SAAN,GAAkBb,KAAK,CAACU,KAAK,CAACI,KAAN,CAAY,CAAZ,CAAD,CAAvB,GAA0C,CAC3C;AAHY,KAAf;AAKD,GANqB,CAAtB;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEH,oBAAC,SAAD,oBAAeL,IAAI,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACJH,OAAO,CAACS,GAAR,CAAYC,GAAG,iBACN,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAG,OAAMD,GAAI;AADvB,KAHT;AAME,IAAA,OAAO,EAAER,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,CADI,CAFG,CADJ,CAsBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCI;AAoCH;;AAED,eAAeD,OAAf","sourcesContent":["import React from \"react\";\nimport clamp from 'lodash-es/clamp'\n// import { render } from \"react-dom\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useScroll } from \"react-use-gesture\";\nimport { Container } from 'react-bootstrap';\nimport Draggable from 'react-draggable';\n\nimport '../App.scss';\n\n\nconst podcast=[\n    \"/baked.jpg\",\n    \"/lesser.jpg\",\n    \"/pod.jpg\",\n    \"/son.jpg\"\n  ]\n\nfunction Content(){\n\n    const controls = useAnimation();\n    const bind = useScroll(event => {\n      controls.start({\n        transform: `perspective(500px) rotateY(${\n          event.scrolling ? clamp(event.delta[0]) : 0\n        }deg)`\n      });\n    });\n\n    \n\n    return(\n        <div className=\"content\">\n          \n     <Container {...bind()}>\n{podcast.map(src => (\n          <motion.div\n            key={src}\n            className=\"card\"\n            style={{\n              backgroundImage: `url(${src})`\n            }}\n            animate={controls}\n          />\n        ))}\n\n     \n\n</Container>\n        </div>\n\n   \n\n//  {/* <div className=\"container\" {...bind()}>\n// //         {podcast.map(src => (\n// //           <motion.div\n// //             key={src}\n// //             className=\"card\"\n// //             style={{\n// //               backgroundImage: `url(${src})`\n// //             }}\n// //             animate={controls}\n// //           />\n// //         ))}\n// //       </div> */}\n      \n    )\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}